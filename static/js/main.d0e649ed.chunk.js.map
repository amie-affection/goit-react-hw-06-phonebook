{"version":3,"sources":["phonebook/Phonebook.module.css","oneContact/OneContact.module.css","redux/contacts/contactsType.js","redux/contacts/contactsAction.js","phonebook/Phonebook.js","oneContact/OneContact.js","filterContacts/FilterContacts.jsx","contactList/ContactList.js","themeContext/ThemeContext.jsx","App.js","hoc/withTheme.jsx","redux/contacts/contactsReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","name","number","type","contactsType","payload","contact","id","Date","now","idContactDelete","nameContact","Phonebook","state","contactName","handleChange","target","value","setState","handleSubmit","e","preventDefault","addContact","props","this","onSubmit","style","marginLeft","className","styles","inputName","onChange","placeholder","required","inputNumber","Component","connect","dispatch","contactsAction","deleteContact","btnDelete","onClick","filter","contactRoot","filterReducer","console","log","contactList","contactReducer","toLowerCase","includes","map","key","Context","createContext","themeConfig","light","fontColor","bodybg","dark","ThemeContext","toggleTheme","prevTheme","theme","Provider","children","Consumer","withTheme","WrappedComponent","context","filterByName","contactStorage","localStorage","getItem","contacts","JSON","parse","prevProps","prevState","setItem","stringify","color","background","marginTop","combineReducers","action","rootReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0e649ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Phonebook_btn__2vDRI\",\"inputName\":\"Phonebook_inputName__1WfAE\",\"inputNumber\":\"Phonebook_inputNumber__Y4Jor\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"OneContact_btnDelete__AZlXn\"};","export default {\r\n    ADD_CONTACT: 'contacts/ADD_CONTACT',\r\n    DELETE_CONTACT: 'contacts/DELETE_CONTACT',\r\n    FILTER_CONTACT: 'contacts/FILTER_CONTACT'\r\n};","import contactsType from \"./contactsType\";\r\n\r\nconst addContact = (name, number) => ({\r\n  type: contactsType.ADD_CONTACT,\r\n\r\n  payload: {\r\n    contact: {\r\n      id: Date.now(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n});\r\n\r\nconst deleteContact = (idContactDelete) => ({\r\n  type: contactsType.DELETE_CONTACT,\r\n\r\n  payload: { id: idContactDelete },\r\n});\r\n\r\nconst filterContact = (nameContact) => ({\r\n  type: contactsType.FILTER_CONTACT,\r\n\r\n  payload: {\r\n    name: nameContact,\r\n  },\r\n});\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  filterContact,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from \"../redux/contacts/contactsAction\";\r\nimport styles from \"./Phonebook.module.css\";\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    contactName: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { contactName, number } = this.state;\r\n    const { addContact } = this.props;\r\n\r\n    this.setState({\r\n      contactName: \"\",\r\n      number: \"\",\r\n    });\r\n    addContact(contactName, number);\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const { contactName, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} style={{ marginLeft: \"30px\" }}>\r\n        <h2>Phonebook</h2>\r\n\r\n        <input\r\n          className={styles.inputName}\r\n          type=\"text\"\r\n          name=\"contactName\"\r\n          value={contactName}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Enter name...\"\r\n          required\r\n        ></input>\r\n\r\n        <input\r\n          className={styles.inputNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Number...\"\r\n          required\r\n        ></input>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (name, number) =>\r\n    dispatch(contactsAction.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from \"../redux/contacts/contactsAction\";\r\nimport styles from \"./OneContact.module.css\";\r\n\r\nconst OneContact = ({ contact: { id, name, number }, deleteContact }) => {\r\n  return (\r\n    <li>\r\n      <span>{name}: </span>\r\n      <span>{number}</span>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.btnDelete}\r\n        onClick={deleteContact}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { id }) => {\r\n  return {\r\n    deleteContact: () => dispatch(contactsAction.deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(OneContact);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from \"../redux/contacts/contactsAction\";\r\n\r\nconst FilterContacts = ({ filter, onChange }) => {\r\n  console.log(filter);\r\n  return (\r\n    <>\r\n      <p style={{ marginLeft: \"30px\" }}>Find contacts by name</p>\r\n      <input\r\n        style={{ marginLeft: \"30px\" }}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: state.contactRoot.filterReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (e) => dispatch(contactsAction.filterContact(e.target.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContacts);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport OneContact from \"../oneContact/OneContact\";\r\nimport FilterContacts from \"../filterContacts/FilterContacts\";\r\n\r\nconst ContactList = ({ contactList, filter, onChange }) => {\r\n  return (\r\n    <>\r\n      <h2 style={{ marginLeft: \"30px\" }}>Contacts</h2>\r\n      <FilterContacts filter={filter} onChange={onChange} />\r\n      <ul>\r\n        {contactList.map((contact) => (\r\n          <OneContact id={contact.id} contact={contact} key={contact.id} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state\", state);\r\n  return {\r\n    contactList: state.contactRoot.contactReducer.filter((contact) =>\r\n      contact.name\r\n        .toLowerCase()\r\n        .includes(state.contactRoot.filterReducer.toLowerCase())\r\n    ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React, { Component, createContext } from \"react\";\r\n\r\nconst Context = createContext();\r\nconst themeConfig = {\r\n  light: {\r\n    fontColor: \"black\",\r\n    bodybg: \"white\",\r\n  },\r\n  dark: {\r\n    fontColor: \"white\",\r\n    bodybg: \"black\",\r\n  },\r\n};\r\n\r\nclass ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    this.setState((prevTheme) => {\r\n      if (prevTheme.theme === \"light\") {\r\n        return { theme: \"dark\", themeConfig: themeConfig.dark };\r\n      } else {\r\n        return { theme: \"light\", themeConfig: themeConfig.light };\r\n      }\r\n    });\r\n  };\r\n\r\n  state = {\r\n    theme: \"light\",\r\n    themeConfig: themeConfig.light,\r\n    toggleTheme: this.toggleTheme,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeContext;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Phonebook from \"./phonebook/Phonebook\";\nimport ContactList from \"./contactList/ContactList\";\nimport withTheme from \"./hoc/withTheme\";\n\nclass App extends Component {\n  state = {\n    filter: \"\",\n    // name: \"\",\n    // number: \"\",\n  };\n\n  componentDidMount() {\n    const contactStorage = localStorage.getItem(\"contacts\");\n    if (contactStorage) {\n      this.setState({ contacts: JSON.parse(contactStorage) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   console.log(\"Submit\");\n  //   console.log(this.state);\n  //   const contact = {\n  //     id: uuidv4(),\n  //     name: this.state.name,\n  //     number: this.state.number,\n  //   };\n  //   this.state.contacts.find(\n  //     ({ name }) => name === contact.name && contact.name\n  //   )\n  //     ? alert(`${contact.name} already exists`)\n  //     : this.setState((prev) => {\n  //         return {\n  //           contacts: [...prev.contacts, contact],\n  //         };\n  //       });\n  //   this.setState({ name: \"\", number: \"\" });\n  // };\n\n  // handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   console.log(value);\n  //   this.setState({ [name]: value });\n  // };\n\n  filterByName = () => {\n    // return this.state.contacts.filter((contact) =>\n    //   contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    // );\n  };\n\n  deleteContact = (id) => {\n    // this.setState((prev) => {\n    //   return {\n    //     contacts: prev.contacts.filter((contact) => contact.id !== id),\n    //   };\n    // });\n  };\n\n  render() {\n    const filterContact = this.filterByName();\n    // console.log(filterContact);\n    // console.log(this.props);\n    const {\n      themeConfig: { fontColor, bodybg },\n    } = this.props;\n    const { filter } = this.state;\n    return (\n      <div style={{ color: fontColor, background: bodybg }}>\n        <button\n          type=\"submit\"\n          style={{ marginLeft: \"30px\", marginTop: \"30px\" }}\n          onClick={this.props.toggleTheme}\n        >\n          Change theme\n        </button>\n        <Phonebook\n          // onSubmit={this.handleSubmit}\n          // onChange={this.handleChange}\n          name={this.state.name}\n          number={this.state.number}\n        />\n\n        <ContactList\n          filter={filter}\n          // onChange={this.handleChange}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withTheme(App);\n","import React from \"react\";\r\nimport ThemeContext from \"../themeContext/ThemeContext\";\r\n\r\nconst withTheme = (WrappedComponent) => {\r\n  return function WithTheme(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {(context) => {\r\n          console.log(context);\r\n          return (\r\n            <WrappedComponent\r\n              {...props}\r\n              theme={context.theme}\r\n              themeConfig={context.themeConfig}\r\n              toggleTheme={context.toggleTheme}\r\n            />\r\n          );\r\n        }}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withTheme;\r\n","import { combineReducers } from \"redux\";\r\nimport contactsType from \"./contactsType\";\r\n\r\nconst contactReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case contactsType.ADD_CONTACT:\r\n      return [...state, action.payload.contact];\r\n\r\n    case contactsType.DELETE_CONTACT:\r\n      return state.filter((contact) => contact.id !== action.payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case contactsType.FILTER_CONTACT:\r\n      return action.payload.name;\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  contactReducer: contactReducer,\r\n  filterReducer: filterReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contacts/contactsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contactRoot: contactReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst contactReducer = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  { contactRoot: { contactReducer } },\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport ThemeContext from \"./themeContext/ThemeContext\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeContext>\n      <App />\n    </ThemeContext>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}